<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>a43f045161137a5c9940d6efca2d8828c</Anchor>
    <Abstract>initial setup of soundfile and adjustment silder related variables</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_process</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>ab1c4e09392d873e432cb0edeae71f17c</Anchor>
    <Abstract>refresh plaback positions, opens grain scheduleing, writes gaus value, writes into output</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_set_num_grains</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>ac8c478d5ad0c8ecd25c13951e8d1a4d6</Anchor>
    <Abstract>sets number of grains sets number of grains according to</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_adjust_current_grain_index</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>a4851564c44cc8e0bae53de300c6dec30</Anchor>
    <Abstract>adjusts current grain index adjusts current grain index according to</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_populate_grain_table</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>af1fcbd7334868a3c94bea99fee01f7ce</Anchor>
    <Abstract>generates a grain table generates a grain table according to</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_properties_update</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8c.html</Path>
    <Anchor>ae123edef2c228ace563e0cbe4f424860</Anchor>
    <Abstract>checks on current input states e.g. slider positions and updates correspondent values</Abstract>
    <DeclaredIn>c_granular_synth.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>a43f045161137a5c9940d6efca2d8828c</Anchor>
    <Abstract>initial setup of soundfile and adjustment silder related variables</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_process</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>ab1c4e09392d873e432cb0edeae71f17c</Anchor>
    <Abstract>refresh plaback positions, opens grain scheduleing, writes gaus value, writes into output</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_set_num_grains</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>ac8c478d5ad0c8ecd25c13951e8d1a4d6</Anchor>
    <Abstract>sets number of grains sets number of grains according to</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_adjust_current_grain_index</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>a4851564c44cc8e0bae53de300c6dec30</Anchor>
    <Abstract>adjusts current grain index adjusts current grain index according to</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_populate_grain_table</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>af1fcbd7334868a3c94bea99fee01f7ce</Anchor>
    <Abstract>generates a grain table generates a grain table according to</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_internal_scheduling</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>a25635e32880f4c39cdf848a5820aa9d9</Anchor>
    <Abstract>scheduling of grain playback sheduling of grain playback</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth_properties_update</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>a060f85e20b07a46f31a7fb588da39060</Anchor>
    <Abstract>checks on current input states e.g. slider positions and updates correspondent values</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_adsr_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>c__granular__synth_8h.html</Path>
    <Anchor>aaae5d861cb60747af27b39b0658a92bd</Anchor>
    <Abstract>calculates ADSR envelope as a single value calculates ADSR envelope as a single value in dependance o...</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculate_adsr_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8c.html</Path>
    <Anchor>aaae5d861cb60747af27b39b0658a92bd</Anchor>
    <Abstract>calculates ADSR envelope as a single value calculates ADSR envelope as a single value in dependance o...</Abstract>
    <DeclaredIn>envelope.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelope_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8c.html</Path>
    <Anchor>a5d04622a6c7e4c1e313a47ff907a1155</Anchor>
    <Abstract>calculates new ADSR envelope</Abstract>
    <DeclaredIn>envelope.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gauss</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8c.html</Path>
    <Anchor>ada53322e75330e22584277e4aab720bc</Anchor>
    <DeclaredIn>envelope.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelope_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8c.html</Path>
    <Anchor>a1c1368cf5424e9a5ae2dd5d9295661c5</Anchor>
    <Abstract>frees envelope</Abstract>
    <DeclaredIn>envelope.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelope_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8h.html</Path>
    <Anchor>a5d04622a6c7e4c1e313a47ff907a1155</Anchor>
    <Abstract>calculates new ADSR envelope</Abstract>
    <DeclaredIn>envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gauss</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8h.html</Path>
    <Anchor>a0a3592cff3c411e98df69da098856168</Anchor>
    <DeclaredIn>envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelope_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>envelope_8h.html</Path>
    <Anchor>a1c1368cf5424e9a5ae2dd5d9295661c5</Anchor>
    <Abstract>frees envelope</Abstract>
    <DeclaredIn>envelope.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAMPLERATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>grain_8c.html</Path>
    <Anchor>a538e0cad3acb787a49e16b1e53787610</Anchor>
    <Abstract>To-Do: Set dynamically by user input.</Abstract>
    <DeclaredIn>grain.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>grain_8c.html</Path>
    <Anchor>ac42c86512f5fdaa5371155efaf4b469e</Anchor>
    <Abstract>generates new grain depending on</Abstract>
    <DeclaredIn>grain.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_internal_scheduling</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>grain_8c.html</Path>
    <Anchor>a25635e32880f4c39cdf848a5820aa9d9</Anchor>
    <Abstract>scheduling of grain playback sheduling of grain playback</Abstract>
    <DeclaredIn>grain.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>grain_8c.html</Path>
    <Anchor>a95667aefa8dd361c1f8dfba4ecbbf670</Anchor>
    <Abstract>frees grain frees grain</Abstract>
    <DeclaredIn>grain.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_new</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>grain_8h.html</Path>
    <Anchor>ac42c86512f5fdaa5371155efaf4b469e</Anchor>
    <Abstract>generates new grain depending on</Abstract>
    <DeclaredIn>grain.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>grain_8h.html</Path>
    <Anchor>a95667aefa8dd361c1f8dfba4ecbbf670</Anchor>
    <Abstract>frees grain frees grain</Abstract>
    <DeclaredIn>grain.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_samples_from_ms</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>purple__utils_8c.html</Path>
    <Anchor>adedfab0848a63809acd487441d157908</Anchor>
    <Abstract>Gets the number of samples from given time of a sample in ms.</Abstract>
    <DeclaredIn>purple_utils.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ms_from_samples</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>purple__utils_8c.html</Path>
    <Anchor>a4f939b5cdf750d42da571e97fdd1510f</Anchor>
    <Abstract>Gets the time of a sample in ms from the number of samples.</Abstract>
    <DeclaredIn>purple_utils.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_interpolated_sample_value</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>purple__utils_8c.html</Path>
    <Anchor>a228b2ef6097d375daeea9358a534ce54</Anchor>
    <Abstract>Gets an interpolated sample value between.</Abstract>
    <DeclaredIn>purple_utils.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_alloc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8c.html</Path>
    <Anchor>ac549a7c59d4bb509d568f9978b916fbb</Anchor>
    <DeclaredIn>vas_mem.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_resize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8c.html</Path>
    <Anchor>ad6c97252ba29dace27ab0065778b2ba8</Anchor>
    <DeclaredIn>vas_mem.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8c.html</Path>
    <Anchor>a751a5f7552bb2cd98282edf0afe0d059</Anchor>
    <Abstract>frees pointer</Abstract>
    <DeclaredIn>vas_mem.c</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_alloc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8h.html</Path>
    <Anchor>ac549a7c59d4bb509d568f9978b916fbb</Anchor>
    <DeclaredIn>vas_mem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_resize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8h.html</Path>
    <Anchor>ad6c97252ba29dace27ab0065778b2ba8</Anchor>
    <DeclaredIn>vas_mem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vas_mem_free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>vas__mem_8h.html</Path>
    <Anchor>a751a5f7552bb2cd98282edf0afe0d059</Anchor>
    <Abstract>frees pointer</Abstract>
    <DeclaredIn>vas_mem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_README</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md_README.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_atom</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_atom</Scope>
    </TokenIdentifier>
    <Path>struct__atom.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gobj</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_gobj</Scope>
    </TokenIdentifier>
    <Path>struct__gobj.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gpointer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_gpointer</Scope>
    </TokenIdentifier>
    <Path>struct__gpointer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gstub</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_gstub</Scope>
    </TokenIdentifier>
    <Path>struct__gstub.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_resample</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_resample</Scope>
    </TokenIdentifier>
    <Path>struct__resample.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_scalar</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_scalar</Scope>
    </TokenIdentifier>
    <Path>struct__scalar.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signal</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_signal</Scope>
    </TokenIdentifier>
    <Path>struct__signal.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_symbol</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_symbol</Scope>
    </TokenIdentifier>
    <Path>struct__symbol.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_text</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>_text</Scope>
    </TokenIdentifier>
    <Path>struct__text.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c_granular_synth</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>c_granular_synth</Scope>
    </TokenIdentifier>
    <Path>structc__granular__synth.html</Path>
    <Abstract>The Purde Data struct of the c_granular_synth~ object.</Abstract>
    <DeclaredIn>c_granular_synth.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>envelope</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>envelope</Scope>
    </TokenIdentifier>
    <Path>structenvelope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grain</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>grain</Scope>
    </TokenIdentifier>
    <Path>structgrain.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde_new</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
    <Anchor>a1d620b5fd5e33ac6a1e388eb7b20b8f1</Anchor>
    <Abstract>Creates a new pd_granular_synth_tilde object.  For more information please refer to the Pure Data Doc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde_perform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
    <Anchor>a58e7b5d615cd9c5bc929d37ad5d6a251</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde_free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
    <Anchor>a19482970f795ba98b5126fe92083e601</Anchor>
    <Abstract>Frees object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde_dsp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
    <Anchor>a1dda6842f095de3ccf12153828f000cd</Anchor>
    <Abstract>Adds pd_granular_synth_tilde to the signal chain.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pd_granular_synth_tilde_setup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>pd_granular_synth_tilde</Scope>
    </TokenIdentifier>
    <Path>structpd__granular__synth__tilde.html</Path>
    <Anchor>a0258ab05601a93bc7cb39bdd1b1f398a</Anchor>
    <Abstract>Setup of pd_granular_synth_tilde   For more information please refer to the Pure Data Docs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>window</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>window</Scope>
    </TokenIdentifier>
    <Path>structwindow.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>word</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>word</Scope>
    </TokenIdentifier>
    <Path>unionword.html</Path>
  </Token>
</Tokens>
